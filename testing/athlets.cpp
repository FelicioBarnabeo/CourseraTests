#include <iostream>
#include <vector>
#include <list>

using namespace std;

//У каждого спортсмена на футболке написан уникальный номер. Спортсмены по очереди выходят из раздевалки и должны построиться на стадионе.
//Тренер каждому выходящему спортсмену называет номер того спортсмена, перед которым нужно встать.
//Если спортсмена с названным номером на поле нет, то нужно встать в конец шеренги.

//В стандартном вводе сначала задано натуральное число n, не превосходящее 100000, — количество спортсменов. Далее идут n пар неотрицательных целых чисел, не превосходящих 100000.
//Первое число в паре — номер очередного выходящего спортсмена. Второе число в паре — номер того спортсмена, перед которым должен встать текущий.

//Напечатайте в стандартный вывод номера спортсменов в порядке построения на поле.
//Ограничение по времени — 0,8 с.

//int main()
//{
//    const int MAX_ATH = 100'000;
//    using Position =  list<int>::iterator ;

//    int q;
//    cin >> q;

//    list<int> row;
//    vector<Position> athRefs(MAX_ATH+1,row.end()); //вектор фискированного размера , пушбеков не планирируется поэтому итераторы с ссылками будут валидны


//    int athlet, nextAthlet;
//    for(int i=0; i<q; i++)
//    {
//        cin >> athlet >> nextAthlet;
//        athRefs[athlet] = row.insert(athRefs[nextAthlet],athlet);
//    }
//    for(auto a : row)
//        cout<<a<<" ";
//}


//5
//42 0
//17 42
//13 0
//123 42
//5 13

//17 123 42 5 13
